{"version":3,"sources":["containers/recipelistview.js","components/myrecipe.js","containers/ingredientdetailview.js","routes.js","containers/layout.js","App.js","serviceWorker.js","index.js"],"names":["IconText","_ref","type","text","react_default","a","createElement","icon","style","marginRight","Myrecipes","props","list","itemLayout","size","pagination","onChange","page","console","log","pageSize","dataSource","data","footer","renderItem","item","Item","key","title","actions","myrecipe_IconText","extra","width","alt","src","Meta","avatar","href","description","content","listData","i","push","concat","RecipeList","state","recipes","_this2","this","axios","get","then","res","setState","myrecipe","React","Component","IngredientDetail","ingredients","ingId","match","params","ingredientID","card","details","BaseRouter","Route","exact","path","component","Header","Layout","Content","Footer","CustomLayout","layout","className","menu","theme","mode","defaultSelectedKeys","lineHeight","padding","breadcrumb","margin","background","minHeight","children","textAlign","App","BrowserRouter","containers_layout","routes","Boolean","window","location","hostname","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"6JAKA,sJCDMA,EAAW,SAAAC,GAAA,IAAGC,EAAHD,EAAGC,KAAMC,EAATF,EAASE,KAAT,OACfC,EAAAC,EAAAC,cAAA,YACEF,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAML,KAAMA,EAAMM,MAAO,CAAEC,YAAa,KACvCN,IAoCUO,EAhCG,SAACC,GACf,OAEFP,EAAAC,EAAAC,cAACM,EAAA,EAAD,CACEC,WAAW,WACXC,KAAK,QACLC,WAAY,CACVC,SAAU,SAACC,GACTC,QAAQC,IAAIF,IAEdG,SAAU,GAEZC,WAAYV,EAAMW,KAClBC,OAAQnB,EAAAC,EAAAC,cAAA,WAAKF,EAAAC,EAAAC,cAAA,uBAAL,gBACRkB,WAAY,SAAAC,GAAI,OACdrB,EAAAC,EAAAC,cAACM,EAAA,EAAKc,KAAN,CACEC,IAAKF,EAAKG,MACVC,QAAS,CAACzB,EAAAC,EAAAC,cAACwB,EAAD,CAAU5B,KAAK,SAASC,KAAK,QAAUC,EAAAC,EAAAC,cAACwB,EAAD,CAAU5B,KAAK,SAASC,KAAK,QAAUC,EAAAC,EAAAC,cAACwB,EAAD,CAAU5B,KAAK,UAAUC,KAAK,OACtH4B,MAAO3B,EAAAC,EAAAC,cAAA,OAAK0B,MAAO,IAAKC,IAAI,OAAOC,IAAI,yEAEvC9B,EAAAC,EAAAC,cAACM,EAAA,EAAKc,KAAKS,KAAX,CACEC,OAAQhC,EAAAC,EAAAC,cAAC8B,EAAA,EAAD,CAAQF,IAAKT,EAAKW,SAC1BR,MAAOxB,EAAAC,EAAAC,cAAA,KAAG+B,KAAMZ,EAAKY,MAAOZ,EAAKG,OACjCU,YAAab,EAAKa,cAEnBb,EAAKc,aDhCRC,EAAW,GACRC,EAAI,EAAGA,EAAI,GAAIA,IACtBD,EAASE,KAAK,CACZL,KAAM,oBACNT,MAAK,mBAAAe,OAAqBF,GAC1BL,OAAQ,mEACRE,YAAa,yFACbC,QAAS,sMAwBEK,6MAnBXC,MAAQ,CACJC,QAAS,uFAGO,IAAAC,EAAAC,KAChBC,IAAMC,IAAN,8BACCC,KAAK,SAAAC,GACFL,EAAKM,SAAS,CACVP,QAASM,EAAI9B,OAEjBJ,QAAQC,IAAIiC,EAAI9B,yCAIpB,OACIlB,EAAAC,EAAAC,cAACgD,EAAD,CAAWhC,KAAM0B,KAAKH,MAAMC,iBAhBfS,IAAMC,oBEahBC,6MAvBXZ,MAAQ,CACJa,YAAa,uFAGG,IAAAX,EAAAC,KACVW,EAAQX,KAAKrC,MAAMiD,MAAMC,OAAOC,aACtCb,IAAMC,IAAN,6BAAAP,OAAuCgB,IACtCR,KAAK,SAAAC,GACFL,EAAKM,SAAS,CACVK,YAAaN,EAAI9B,OAErBJ,QAAQC,IAAIiC,EAAI9B,yCAIpB,OACIlB,EAAAC,EAAAC,cAACyD,EAAA,EAAD,CAAMnC,MAAOoB,KAAKH,MAAMa,YAAY9B,OACzCxB,EAAAC,EAAAC,cAAA,SAAI0C,KAAKH,MAAMa,YAAYM,iBAlBHT,IAAMC,WCQtBS,EAPI,kBACf7D,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAC4D,EAAA,EAAD,CAAOC,OAAK,EAACC,KAAK,IAAIC,UAAWzB,IACjCxC,EAAAC,EAAAC,cAAC4D,EAAA,EAAD,CAAOC,OAAK,EAACC,KAAK,iBAAiBC,UAAWZ,0CCJ9Ca,EAA4BC,IAA5BD,OAAQE,EAAoBD,IAApBC,QAASC,EAAWF,IAAXE,OAmCVC,EAjCM,SAAC/D,GAClB,OACEP,EAAAC,EAAAC,cAACqE,EAAA,EAAD,CAAQC,UAAU,UAChBxE,EAAAC,EAAAC,cAACgE,EAAD,KACElE,EAAAC,EAAAC,cAAA,OAAKsE,UAAU,SACfxE,EAAAC,EAAAC,cAACuE,EAAA,EAAD,CACEC,MAAM,OACNC,KAAK,aACLC,oBAAqB,CAAC,KACtBxE,MAAO,CAAEyE,WAAY,SAErB7E,EAAAC,EAAAC,cAACuE,EAAA,EAAKnD,KAAN,CAAWC,IAAI,KAAf,QACAvB,EAAAC,EAAAC,cAACuE,EAAA,EAAKnD,KAAN,CAAWC,IAAI,KAAf,cACAvB,EAAAC,EAAAC,cAACuE,EAAA,EAAKnD,KAAN,CAAWC,IAAI,KAAf,cAGJvB,EAAAC,EAAAC,cAACkE,EAAD,CAAShE,MAAO,CAAE0E,QAAS,WACzB9E,EAAAC,EAAAC,cAAC6E,EAAA,EAAD,CAAY3E,MAAO,CAAE4E,OAAQ,WAC3BhF,EAAAC,EAAAC,cAAC6E,EAAA,EAAWzD,KAAZ,aACAtB,EAAAC,EAAAC,cAAC6E,EAAA,EAAWzD,KAAZ,cAGNtB,EAAAC,EAAAC,cAAA,OAAKE,MAAO,CAAE6E,WAAY,OAAQH,QAAS,GAAII,UAAW,MACxD3E,EAAM4E,WAGNnF,EAAAC,EAAAC,cAACmE,EAAD,CAAQjE,MAAO,CAAEgF,UAAW,SAAUH,WAAY,YAAlD,oBCXOI,mLAZX,OACErF,EAAAC,EAAAC,cAAA,OAAKsE,UAAU,OACfxE,EAAAC,EAAAC,cAACoF,EAAA,EAAD,KACEtF,EAAAC,EAAAC,cAACqF,EAAD,KACEvF,EAAAC,EAAAC,cAACsF,EAAD,gBANQpC,aCKEqC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASpC,MACvB,2DCZNqC,IAASC,OAAO9F,EAAAC,EAAAC,cAAC6F,EAAD,MAASC,SAASC,eAAe,SDuH3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMrD,KAAK,SAAAsD,GACjCA,EAAaC","file":"static/js/main.7e79ccc6.chunk.js","sourcesContent":["import React from 'react';\nimport axios from 'axios';\nimport Myrecipes from '../components/myrecipe.js';\n\nconst listData = [];\nfor (let i = 0; i < 23; i++) {\n  listData.push({\n    href: 'http://ant.design',\n    title: `ant design part ${i}`,\n    avatar: 'https://zos.alipayobjects.com/rmsportal/ODTLcjxAfvqbxHnVXCYX.png',\n    description: 'Ant Design, a design language for background applications, is refined by Ant UED Team.',\n    content: 'We supply a series of design principles, practical patterns and high quality design resources (Sketch and Axure), to help people create their product prototypes beautifully and efficiently.',\n  });\n}\n\nclass RecipeList extends React.Component {\n    state = {\n        recipes: []\n\n    }\n    componentDidMount() {\n        axios.get(`http://127.0.0.1.8000/api/`)\n        .then(res => {\n            this.setState({\n                recipes: res.data\n            });\n            console.log(res.data); \n        })\n    }\n    render() {\n        return (\n            <Myrecipes data={this.state.recipes} />\n        )\n    }\n}\nexport default RecipeList;","import React from 'react';\nimport { List, Avatar, Icon } from 'antd';\n\n\nconst IconText = ({ type, text }) => (\n  <span>\n    <Icon type={type} style={{ marginRight: 8 }} />\n    {text}\n  </span>\n);\n\nconst Myrecipes = (props) => {\n    return (\n        \n  <List\n    itemLayout=\"vertical\"\n    size=\"large\"\n    pagination={{\n      onChange: (page) => {\n        console.log(page);\n      },\n      pageSize: 3,\n    }}\n    dataSource={props.data}\n    footer={<div><b>ant design</b> footer part</div>}\n    renderItem={item => (\n      <List.Item\n        key={item.title}\n        actions={[<IconText type=\"star-o\" text=\"156\" />, <IconText type=\"like-o\" text=\"156\" />, <IconText type=\"message\" text=\"2\" />]}\n        extra={<img width={272} alt=\"logo\" src=\"https://gw.alipayobjects.com/zos/rmsportal/mqaQswcyDLcXyDKnZfES.png\" />}\n      >\n        <List.Item.Meta\n          avatar={<Avatar src={item.avatar} />}\n          title={<a href={item.href}>{item.title}</a>}\n          description={item.description}\n        />\n        {item.content}\n      </List.Item>\n    )}\n  />\n    )\n}\n\nexport default Myrecipes;","import React from 'react';\nimport axios from 'axios';\n\nimport { Card } from 'antd';\nclass IngredientDetail extends React.Component {\n    state = {\n        ingredients: {}\n\n    }\n    componentDidMount() {\n        const ingId = this.props.match.params.ingredientID;\n        axios.get(`http://127.0.0.1.8000/api/${ingId}`)\n        .then(res => {\n            this.setState({\n                ingredients: res.data\n            });\n            console.log(res.data); \n        })\n    }\n    render() {\n        return (\n            <Card title={this.state.ingredients.title}> \n\t\t\t\t\t\t\t<p>{this.state.ingredients.details}</p>\n\n            </Card>\n        )\n    }\n}\nexport default IngredientDetail;","import React from 'react';\nimport { Route } from 'react-router-dom';\n\nimport RecipeList from './containers/recipelistview.js';\nimport IngredientDetail from './containers/ingredientdetailview.js';\nconst BaseRouter = () => (\n    <div>\n        <Route exact path='/' component={RecipeList} />\n        <Route exact path='/:ingredientid' component={IngredientDetail} />\n    </div>\n);\n\nexport default BaseRouter;","import React from 'react';\nimport { Layout, Menu, Breadcrumb } from 'antd';\nimport { Link } from 'react-router-dom'; \n\nconst { Header, Content, Footer } = Layout;\n\nconst CustomLayout = (props) => {\n    return (\n      <Layout className=\"layout\">\n        <Header>\n          <div className=\"logo\" />\n          <Menu\n            theme=\"dark\"\n            mode=\"horizontal\"\n            defaultSelectedKeys={['2']}\n            style={{ lineHeight: '64px' }}\n          >\n            <Menu.Item key=\"1\">Home</Menu.Item>\n            <Menu.Item key=\"2\">My Recipes</Menu.Item>\n            <Menu.Item key=\"3\">Settings</Menu.Item>\n          </Menu>\n        </Header>\n        <Content style={{ padding: '0 50px' }}>\n          <Breadcrumb style={{ margin: '16px 0' }}>\n            <Breadcrumb.Item>Home</Breadcrumb.Item>\n            <Breadcrumb.Item>List</Breadcrumb.Item>\n            {/* <Link>Home</Link> */}\n          </Breadcrumb>\n\t\t\t\t\t\t<div style={{ background: '#fff', padding: 24, minHeight: 280 }}>\n\t\t\t\t\t\t\t{props.children}\n\t\t\t\t\t\t</div>\n        </Content>\n        <Footer style={{ textAlign: 'center', background: '#646404' }}>\n         \tNutrition Team\n        </Footer>\n      </Layout>\n    )\n}\n\nexport default CustomLayout;\n  \n","import React, { Component } from 'react';\nimport { BrowserRouter as Router } from 'react-router-dom';\nimport BaseRouter from './routes.js';\nimport 'antd/dist/antd.css';  // from ant.design usage\n\nimport CustomLayout from './containers/layout.js';\n\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"App\">\n      <Router>\n        <CustomLayout>\n          <BaseRouter/>\n        </CustomLayout> \n        </Router>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}